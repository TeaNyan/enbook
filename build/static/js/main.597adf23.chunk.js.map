{"version":3,"sources":["home/pages/style.js","shared/components/Auth/style.js","shared/components/Auth/SignIn.js","shared/components/Auth/SignUp.js","shared/components/Header/style.js","shared/components/Header/index.js","shared/layouts/Column.js","shared/layouts/Row.js","shared/Modal/style.js","shared/Modal/index.js","home/pages/Home.js","places/pages/Places.js","App.js","serviceWorker.js","index.js"],"names":["HomeBg","styled","div","BgText","span","GetStartedButton","button","HomeTags","TagText","Container","Input","InputGroup","StyledForm","form","ForgotPassword","SignIn","props","useForm","register","handleSubmit","onToggleSignIn","onSubmit","useCallback","d","console","log","text","className","id","placeholder","inputRef","name","type","style","backgroundColor","border","borderBottom","color","classNames","Classes","INTENT_WARNING","onClick","SignUp","Header","header","HeaderRow","align","LogIn","NavLink","MainHeader","onOpenModal","onCloseModal","logIn","src","alt","Column","Row","width","justifyContent","OverLayout","height","Modal","transitionDuration","isOpen","canOutsideClickClose","canEscapeKeyClose","onClose","children","Home","useState","isModalOpen","setIsModalOpen","isSignIn","setIsSignIn","handleOpenModal","handleCloseModal","handleToggleSignIn","nextIsSignIn","Fragment","fontSize","marginRight","Places","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.597adf23.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const HomeBg = styled.div`\n  width: 100%;\n  height: calc(100vw * 0.4);\n  background: url('/images/bg6.jpg');\n  background-repeat: no-repeat;\n  background-size: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nexport const BgText = styled.span`\n  width: 720px;\n  height: auto;\n  color: #fff;\n  width: auto;\n  border-radius: 4px;\n  background-color: rgba(0, 0, 0, 0.35);\n  padding: 4px 18px 4px 18px;\n  text-align: center;\n`;\n\nexport const GetStartedButton = styled.button`\n  width: 160px;\n  height: 50px;\n  background-color: #fd953c;\n  border: 0;\n  border-radius: 4px;\n  color: #fff;\n  font-weight: 700;\n  font-size: 1.4em;\n  cursor: pointer;\n`;\n\nexport const HomeTags = styled.div`\n  margin: 38px;\n  min-width: 720px;\n  width: 70%;\n  height: auto;\n  background-color: #021839;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  border-radius: 45px;\n`;\n\nexport const TagText = styled.span`\n  font-size: 18px;\n  text-align: justify;\n`;\n","import styled from \"styled-components\";\nimport { InputGroup } from \"@blueprintjs/core\";\n\nexport const Container = styled.div`\n  height: auto;\n  width: 350px;\n  background-color: #021839;\n  color: #fd953c;\n  border-radius: 20px;\n  border: 4px solid #fd953c;\n  box-sizing: border-box;\n  padding: 12px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nexport const Input = styled(InputGroup)`\n  color: #fd953c;\n`;\n\nexport const StyledForm = styled.form`\n  width: 80%;\n  text-align: center;\n`;\n\nexport const ForgotPassword = styled.div`\n  font-size: 0.8em;\n  margin-top: 15px;\n`;\n","import React, { useCallback } from \"react\";\nimport { FormGroup, Classes, Button } from \"@blueprintjs/core\";\nimport { useForm } from \"react-hook-form\";\nimport classNames from \"classnames\";\n\nimport { Container, Input, StyledForm, ForgotPassword } from \"./style\";\n\nconst SignIn = props => {\n  const { register, handleSubmit } = useForm();\n\n  const { onToggleSignIn } = props;\n\n  const onSubmit = useCallback(d => {\n    console.log(d.text);\n  });\n\n  return (\n    <div className={props.className}>\n      <Container>\n        <h3>Login into your account</h3>\n        <StyledForm onSubmit={handleSubmit(onSubmit)}>\n          <FormGroup>\n            <Input\n              id=\"text-input\"\n              placeholder=\"Enter your e-mail\"\n              inputRef={register}\n              name=\"email\"\n              type=\"text\"\n              style={{\n                backgroundColor: \"#021839\",\n                border: 0,\n                borderBottom: \"2px solid #fd953c\",\n                color: \"#fff\"\n              }}\n            />\n            <Input\n              id=\"text-input\"\n              placeholder=\"Password\"\n              inputRef={register}\n              name=\"password\"\n              type=\"password\"\n              style={{\n                backgroundColor: \"#021839\",\n                border: 0,\n                borderBottom: \"2px solid #fd953c\",\n                color: \"#fff\"\n              }}\n            />\n          </FormGroup>\n          <Button className={classNames(Classes.INTENT_WARNING)} type=\"submit\">\n            Sign in\n          </Button>\n        </StyledForm>\n        <ForgotPassword>\n          <span>Don't have an account? </span>\n          <a style={{ color: \"#fff\" }} onClick={onToggleSignIn}>\n            Sign-up here\n          </a>\n        </ForgotPassword>\n      </Container>\n    </div>\n  );\n};\n\nexport default SignIn;\n","import React, { useCallback } from \"react\";\nimport { FormGroup, Classes, Button } from \"@blueprintjs/core\";\nimport { useForm } from \"react-hook-form\";\nimport classNames from \"classnames\";\n\nimport { Container, Input, StyledForm, ForgotPassword } from \"./style\";\n\nconst SignUp = props => {\n  const { register, handleSubmit } = useForm();\n\n  const { onToggleSignIn } = props;\n\n  const onSubmit = useCallback(d => {\n    console.log(d.text);\n  });\n\n  return (\n    <div className={props.className}>\n      <Container>\n        <h3>Create a new account</h3>\n        <StyledForm onSubmit={handleSubmit(onSubmit)}>\n          <FormGroup>\n            <Input\n              id=\"text-input\"\n              placeholder=\"Enter your name\"\n              inputRef={register}\n              name=\"email\"\n              type=\"text\"\n              style={{\n                backgroundColor: \"#021839\",\n                border: 0,\n                borderBottom: \"2px solid #fd953c\",\n                color: \"#fff\"\n              }}\n            />\n            <Input\n              id=\"text-input\"\n              placeholder=\"Enter your e-mail\"\n              inputRef={register}\n              name=\"email\"\n              type=\"text\"\n              style={{\n                backgroundColor: \"#021839\",\n                border: 0,\n                borderBottom: \"2px solid #fd953c\",\n                color: \"#fff\"\n              }}\n            />\n            <Input\n              id=\"text-input\"\n              placeholder=\"Enter your password\"\n              inputRef={register}\n              name=\"password\"\n              type=\"password\"\n              style={{\n                backgroundColor: \"#021839\",\n                border: 0,\n                borderBottom: \"2px solid #fd953c\",\n                color: \"#fff\"\n              }}\n            />\n            <Input\n              id=\"text-input\"\n              placeholder=\"Confirm password\"\n              inputRef={register}\n              name=\"password\"\n              type=\"password\"\n              style={{\n                backgroundColor: \"#021839\",\n                border: 0,\n                borderBottom: \"2px solid #fd953c\",\n                color: \"#fff\"\n              }}\n            />\n          </FormGroup>\n          <Button className={classNames(Classes.INTENT_WARNING)} type=\"submit\">\n            Sign in\n          </Button>\n        </StyledForm>\n        <ForgotPassword>\n          <span>Already have an account? </span>\n          <a style={{ color: \"#fff\" }} onClick={onToggleSignIn}>\n            Sign-in here\n          </a>\n        </ForgotPassword>\n      </Container>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import styled from 'styled-components';\n\nimport { NavLink } from 'react-router-dom';\n\nexport const Header = styled.header`\n  width: 100%;\n  height: 50px;\n  background-color: #fd953c;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  box-sizing: border-box;\n`;\n\nexport const HeaderRow = styled.div`\n  width: 33.33%;\n  display: flex;\n  flex-direction: row;\n  padding-left: 50px;\n  padding-right: 50px;\n  box-sizing: border-box;\n  justify-content: ${props => props.align};\n  align-items: center;\n`;\n\nexport const NavButton = styled(NavLink)`\n  height: 100%;\n`;\n\nexport const LogIn = styled.div`\n  width: 100px;\n  height: 30px;\n  border: 4px solid #021839;\n  color: #fff;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n  font-weight: 700;\n  margin: 8px;\n  box-sizing: border-box;\n  background-color: #021839;\n`;\n","import React, { useCallback } from \"react\";\n\nimport { Header, HeaderRow, NavButton, LogIn } from \"./style\";\n\nconst loggedIn = () => {\n  return (\n    <HeaderRow>\n      <NavButton to=\"/\" exact>\n        Home\n      </NavButton>\n      <NavButton to=\"/places\" exact>\n        Places\n      </NavButton>\n    </HeaderRow>\n  );\n};\n\nconst MainHeader = props => {\n  const { onOpenModal, onCloseModal } = props;\n\n  const logIn = useCallback(() => {\n    return (\n      <HeaderRow align=\"right\">\n        <LogIn onClick={onOpenModal}>Log in</LogIn>\n      </HeaderRow>\n    );\n  }, [onOpenModal, onCloseModal]);\n\n  return (\n    <Header>\n      <HeaderRow align=\"left\">\n        <img src=\"/logo.png\" alt=\"logo\"></img>\n      </HeaderRow>\n      <HeaderRow></HeaderRow>\n      {logIn()}\n    </Header>\n  );\n};\n\nexport default MainHeader;\n","import styled from \"styled-components\";\n\nexport const Column = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`;\n","import styled from \"styled-components\";\n\nexport const Row = styled.div`\n  width: ${props => props.width || \"100%\"};\n  height: auto;\n  display: flex;\n  flex-direction: row;\n  justify-content: ${props => props.justifyContent || \"flex-start\"};\n  align-items: center;\n  box-sizing: border-box;\n  padding: 20px;\n`;\n","import styled from \"styled-components\";\n\nexport const OverLayout = styled.div`\n  top: calc((100vh - ${props => props.height}px) / 2);\n  left: calc((100vw - ${props => props.width}px) / 2);\n  justify-content: space-between;\n  height: ${props => props.height || 500}px\n  width: ${props => props.width || 250}px\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  &focus: {\n    outline: none\n  }\n`;\n","import React from \"react\";\n\nimport { Overlay, Classes } from \"@blueprintjs/core\";\n\nimport { OverLayout } from \"./style\";\n\nconst Modal = props => {\n  const { onCloseModal } = props;\n\n  return (\n    <Overlay\n      transitionDuration={0}\n      isOpen={true}\n      canOutsideClickClose={true}\n      canEscapeKeyClose={true}\n      onClose={onCloseModal}>\n      <OverLayout height={400} width={350}>\n        {props.children}\n      </OverLayout>\n    </Overlay>\n  );\n};\n\nexport default Modal;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport FlightTakeoffOutlinedIcon from \"@material-ui/icons/FlightTakeoffOutlined\";\nimport MenuBookOutlinedIcon from \"@material-ui/icons/MenuBookOutlined\";\nimport PhotoCameraOutlinedIcon from \"@material-ui/icons/PhotoCameraOutlined\";\nimport GroupAddOutlinedIcon from \"@material-ui/icons/GroupAddOutlined\";\n\nimport { HomeBg, BgText, GetStartedButton, HomeTags, TagText } from \"./style\";\nimport SignIn from \"../../shared/components/Auth/SignIn\";\nimport SignUp from \"../../shared/components/Auth/SignUp\";\nimport Header from \"../../shared/components/Header\";\nimport { Column } from \"../../shared/layouts/Column\";\nimport { Row } from \"../../shared/layouts/Row\";\nimport Modal from \"../../shared/Modal\";\n\nconst Home = props => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isSignIn, setIsSignIn] = useState(true);\n\n  const handleOpenModal = useCallback(() => {\n    setIsModalOpen(true);\n  }, [setIsModalOpen]);\n\n  const handleCloseModal = useCallback(() => {\n    setIsModalOpen(false);\n  }, [setIsModalOpen]);\n\n  const handleToggleSignIn = useCallback(() => {\n    const nextIsSignIn = !isSignIn;\n\n    console.log(nextIsSignIn);\n    setIsSignIn(nextIsSignIn);\n  }, [isSignIn]);\n\n  return (\n    <React.Fragment>\n      <Header onOpenModal={handleOpenModal} />\n      <Column>\n        {isModalOpen && (\n          <Modal\n            onCloseModal={handleCloseModal}\n            onToggleSignIn={handleToggleSignIn}>\n            {isSignIn ? (\n              <SignIn onToggleSignIn={handleToggleSignIn} />\n            ) : (\n              <SignUp onToggleSignIn={handleToggleSignIn} />\n            )}\n          </Modal>\n        )}\n        <HomeBg>\n          <BgText className={\"bgText\"}>\n            <h1>Do you like to travel and take photos?</h1>\n          </BgText>\n          <BgText className={\"bgTexth2\"}>\n            <h2>Sign up now and write your own travel blogs.</h2>\n            <h2>Discover new places by following other travelers.</h2>\n          </BgText>\n          <GetStartedButton>Get started</GetStartedButton>\n        </HomeBg>\n        <HomeTags>\n          <Row justifyContent={\"center\"}>\n            <Row width={\"50%\"}>\n              <FlightTakeoffOutlinedIcon\n                style={{ fontSize: 60, marginRight: 20 }}\n              />\n              <TagText>\n                If you like to travel, you want to never forget your journeys.\n                Enbook will help you keep records of all your destinations. You\n                just have to add your journey here with a couple of photos and\n                text and you're all set.\n              </TagText>\n            </Row>\n            <Row width={\"50%\"}>\n              <MenuBookOutlinedIcon style={{ fontSize: 60, marginRight: 20 }} />\n              <TagText>\n                Many people remember their journeys only through photos. All the\n                good memories will fade away after some time and they will only\n                remember the moments captured on photos. Here you can write all\n                the little things that happened on your journey so you can\n                remember them forever.\n              </TagText>\n            </Row>\n          </Row>\n          <Row justifyContent={\"center\"}>\n            <Row width={\"50%\"}>\n              <PhotoCameraOutlinedIcon\n                style={{ fontSize: 60, marginRight: 20 }}\n              />\n              <TagText>\n                They say that a photo is worth a thousand words. But can you\n                really describe the place to someone in a thousand words? Maybe.\n                But why would you waste your time describing it, when you can\n                show a picture of it? We live in a digital world after all.\n              </TagText>\n            </Row>\n            <Row width={\"50%\"}>\n              <GroupAddOutlinedIcon style={{ fontSize: 60, marginRight: 20 }} />\n              <TagText>\n                Traveling alone can be relaxing, but 83% of people say that they\n                rather travel with someone else. Follow other travelers to find\n                out where have they been and learn more about popular\n                destinations through their journeys.\n              </TagText>\n            </Row>\n          </Row>\n        </HomeTags>\n      </Column>\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst Places = props => {\n  return <div>these are places</div>;\n};\n\nexport default Places;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Home from \"./home/pages/Home\";\nimport Places from \"./places/pages/Places\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"/\" exact component={Home}></Route>\n      <Route path=\"/places\" exact component={Places}></Route>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}